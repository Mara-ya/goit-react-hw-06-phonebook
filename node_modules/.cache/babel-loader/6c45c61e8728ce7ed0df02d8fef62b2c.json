{"ast":null,"code":"var _jsxFileName = \"/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js\";\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { WrapperForm, InputForm, SubmitBtn } from './ContactForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  let {\n    onSubmit\n  } = _ref;\n\n  const handleSubmit = (values, _ref2) => {\n    let {\n      resetForm\n    } = _ref2;\n    onSubmit(values);\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleSubmit,\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    children: /*#__PURE__*/_jsxDEV(WrapperForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitBtn, {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_c = ContactForm;\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.js"],"names":["PropTypes","Formik","WrapperForm","InputForm","SubmitBtn","ContactForm","onSubmit","handleSubmit","values","resetForm","name","number","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAkD,sBAAlD;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAE3C,QAAMC,YAAY,GAAG,CAACC,MAAD,YAAyB;AAAA,QAAhB;AAACC,MAAAA;AAAD,KAAgB;AAC5CH,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACAC,IAAAA,SAAS;AACV,GAHD;;AAKE,sBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEF,YAAlB;AAAgC,IAAA,aAAa,EAAE;AAAEG,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAA/C;AAAA,2BACA,QAAC,WAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,wFAHV;AAIE,QAAA,KAAK,EAAC,8FAJR;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CA9BM;KAAMN,W;AAgCbA,WAAW,CAACO,SAAZ,GAAwB;AACtBN,EAAAA,QAAQ,EAAEN,SAAS,CAACa,IAAV,CAAeC;AADH,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { WrapperForm, InputForm, SubmitBtn } from './ContactForm.styled'\n\nexport const ContactForm = ({ onSubmit }) => {\n\n  const handleSubmit = (values, {resetForm}) => {\n    onSubmit(values);\n    resetForm();\n  };\n\n    return (\n      <Formik onSubmit={handleSubmit} initialValues={{ name: '', number: '' }}>\n      <WrapperForm>\n        <lable>Name</lable>\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <lable>Number</lable>\n        <InputForm\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n      </WrapperForm>\n    </Formik>\n    );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}