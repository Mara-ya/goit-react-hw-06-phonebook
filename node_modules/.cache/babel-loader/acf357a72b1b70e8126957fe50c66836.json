{"ast":null,"code":"var _jsxFileName = \"/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.js\";\nimport PropTypes from 'prop-types';\nimport { Contact } from \"../Contact/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = _ref => {\n  let {\n    filtered,\n    onDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: filtered // .map(({ id, name, number }) => {\n    //     return (\n    //         <li key = {id}>\n    //             <Contact contact={{id, name, number }} onDelete={onDelete}/>\n    //         </li>\n    //     )\n    // })\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = ContactList;\nContactList.proptype = {\n  filtered: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/components/ContactList/ContactList.js"],"names":["PropTypes","Contact","ContactList","filtered","onDelete","proptype","arrayOf","shape","id","string","isRequired","name","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAA0B;AAAA,MAAzB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAyB;AACjD,sBACI;AAAA,cACKD,QADL,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdM;KAAMD,W;AAgBbA,WAAW,CAACG,QAAZ,GAAuB;AACnBF,EAAAA,QAAQ,EAAEH,SAAS,CAACM,OAAV,CACNN,SAAS,CAACO,KAAV,CAAgB;AACZC,IAAAA,EAAE,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADT;AAEZC,IAAAA,IAAI,EAAEX,SAAS,CAACS,MAAV,CAAiBC,UAFX;AAGZE,IAAAA,MAAM,EAAEZ,SAAS,CAACU;AAHN,GAAhB,CADM;AADS,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Contact } from \"../Contact/Contact\";\n\nexport const ContactList = ({filtered, onDelete}) => {\n    return (\n        <ul>\n            {filtered\n            // .map(({ id, name, number }) => {\n            //     return (\n            //         <li key = {id}>\n            //             <Contact contact={{id, name, number }} onDelete={onDelete}/>\n            //         </li>\n            //     )\n            // })\n            }\n        </ul>\n    )\n}\n\nContactList.proptype = {\n    filtered: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.isRequired\n        })\n    )\n}"]},"metadata":{},"sourceType":"module"}