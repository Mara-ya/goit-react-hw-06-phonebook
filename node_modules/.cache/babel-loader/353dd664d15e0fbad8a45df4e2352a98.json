{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport initialContacts from \"../components/contacts.json\";\nexport const phonebookSlice = createSlice({\n  name: 'contacts',\n  initialState: initialContacts,\n  reducers: {\n    addContact(state, action) {\n      state.contacts.push(action.payload);\n    },\n\n    remoteContact(state, action) {\n      return state.contacts.filter(contact => contact.id !== action.payload);\n    },\n\n    filteredContact(state, action) {\n      return state.contacts.name.toLowerCase().includes(action.payload);\n    }\n\n  }\n});\nexport const {\n  addContact,\n  remoteContact,\n  filteredContact\n} = phonebookSlice.actions;","map":{"version":3,"sources":["/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/redux/contactSlice.jsx"],"names":["createSlice","initialContacts","phonebookSlice","name","initialState","reducers","addContact","state","action","contacts","push","payload","remoteContact","filter","contact","id","filteredContact","toLowerCase","includes","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACtCG,EAAAA,IAAI,EAAE,UADgC;AAEtCC,EAAAA,YAAY,EAAEH,eAFwB;AAItCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAe;AACrBD,MAAAA,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBF,MAAM,CAACG,OAA3B;AACH,KAHK;;AAKNC,IAAAA,aAAa,CAACL,KAAD,EAAQC,MAAR,EAAe;AACxB,aAAOD,KAAK,CAACE,QAAN,CAAeI,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAAP;AACH,KAPK;;AASNK,IAAAA,eAAe,CAACT,KAAD,EAAQC,MAAR,EAAe;AAC1B,aAAOD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBc,WAApB,GAAkCC,QAAlC,CAA2CV,MAAM,CAACG,OAAlD,CAAP;AACH;;AAXK;AAJ4B,CAAD,CAAlC;AAmBP,OAAO,MAAM;AAACL,EAAAA,UAAD;AAAaM,EAAAA,aAAb;AAA4BI,EAAAA;AAA5B,IAA+Cd,cAAc,CAACiB,OAApE","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport initialContacts from \"../components/contacts.json\"\n\nexport const phonebookSlice = createSlice({\n    name: 'contacts',\n    initialState: initialContacts,\n\n    reducers: {\n        addContact(state, action){\n            state.contacts.push(action.payload);\n        },\n\n        remoteContact(state, action){\n            return state.contacts.filter(contact => contact.id !== action.payload);\n        },\n\n        filteredContact(state, action){\n            return state.contacts.name.toLowerCase().includes(action.payload);\n        }\n    }\n})\n\nexport const {addContact, remoteContact, filteredContact} = phonebookSlice.actions"]},"metadata":{},"sourceType":"module"}