{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const phonebookSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    contacts: [],\n    filter: ''\n  },\n  reducers: {\n    addContact(state, action) {\n      state.contacts.push(action.payload);\n    },\n\n    remoteContact(state, action) {\n      return state.contacts.filter(contact => contact.name.toLowerCase() !== action.payload.toLowerCase());\n    },\n\n    filteredContact(state, action) {\n      return state.contacts.name.toLowerCase().includes(action.payload);\n    }\n\n  }\n});\nexport const {\n  addContact,\n  remoteContact,\n  filteredContact\n} = phonebookSlice.actions;","map":{"version":3,"sources":["/home/mara/Documents/GoIT/React/goit-react-hw-06-phonebook/src/redux/contactSlice.jsx"],"names":["createSlice","phonebookSlice","name","initialState","contacts","filter","reducers","addContact","state","action","push","payload","remoteContact","contact","toLowerCase","filteredContact","includes","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGD,WAAW,CAAC;AACtCE,EAAAA,IAAI,EAAE,WADgC;AAEtCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,MAAM,EAAE;AAFE,GAFwB;AAOtCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAe;AACrBD,MAAAA,KAAK,CAACJ,QAAN,CAAeM,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACH,KAHK;;AAKNC,IAAAA,aAAa,CAACJ,KAAD,EAAQC,MAAR,EAAe;AACxB,aAAOD,KAAK,CAACJ,QAAN,CAAeC,MAAf,CAAsBQ,OAAO,IAAIA,OAAO,CAACX,IAAR,CAAaY,WAAb,OAA+BL,MAAM,CAACE,OAAP,CAAeG,WAAf,EAAhE,CAAP;AACH,KAPK;;AASNC,IAAAA,eAAe,CAACP,KAAD,EAAQC,MAAR,EAAe;AAC1B,aAAOD,KAAK,CAACJ,QAAN,CAAeF,IAAf,CAAoBY,WAApB,GAAkCE,QAAlC,CAA2CP,MAAM,CAACE,OAAlD,CAAP;AACH;;AAXK;AAP4B,CAAD,CAAlC;AAsBP,OAAO,MAAM;AAACJ,EAAAA,UAAD;AAAaK,EAAAA,aAAb;AAA4BG,EAAAA;AAA5B,IAA+Cd,cAAc,CAACgB,OAApE","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const phonebookSlice = createSlice({\n    name: 'phonebook',\n    initialState: {\n        contacts: [],\n        filter: '',\n    },\n\n    reducers: {\n        addContact(state, action){\n            state.contacts.push(action.payload);\n        },\n\n        remoteContact(state, action){\n            return state.contacts.filter(contact => contact.name.toLowerCase() !== action.payload.toLowerCase());\n        },\n\n        filteredContact(state, action){\n            return state.contacts.name.toLowerCase().includes(action.payload);\n        }\n    }\n})\n\nexport const {addContact, remoteContact, filteredContact} = phonebookSlice.actions"]},"metadata":{},"sourceType":"module"}